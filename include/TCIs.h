#ifndef TCIs_H
#define TCIs_H

/**
 * I initially tried that these arrays are generated at compile-time and actually represent the hashes of the according components.
 * However, this turned out to be infeasible.
 * bl2 is somehow built twice during a normal build, which would yield to inconsistent TCIs across the whole software system
 * depending on when the TCI.h was generated and imported.
 *
 * For bl31 it would have been possible.
 *
 * Also, the image of bl32 can't contain its own hash. Since you would need to build it first, then measure the hash, and finally inject the hash.
 * But because the injected data would change the image, the hash would change again.
 */

static const unsigned char tci_bl2[] = {0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
                                        0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
                                        0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02};

static const unsigned char tci_bl31[] = {0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
                                         0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
                                         0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31};

static const unsigned char tci_bl32[] = {0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32};

#endif /* TCIs_H */
